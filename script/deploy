#!/usr/bin/env bash

set -e

error() {
  echo " ! $1"
}

: ${CF_USER:?"Need to set CF_USER environment variable to your cloudfoundry username"}
: ${CF_ORG:?"Need to set CF_ORG environment variable to your cloudfoundry organisation"}
: ${CF_SPACE:?"Need to set CF_SPACE environment variable to your cloudfoundry space"}

if [[ $RUNNING_ON_TRAVIS == "true" ]]; then
  echo "Running on Travis, checking CF_PASS is set"
  : ${CF_PASS:?"Need to set CF_PASS environment variable to your cloudfoundry password"}
fi

# Check that we're on master, or there's an environment variable set to override
BRANCH=$(git rev-parse --abbrev-ref HEAD)

if [[ $RUNNING_ON_TRAVIS != "true" ]]; then
  echo "Checking branch..."
  if [[ $BRANCH != "master" ]] && [[ $I_REALISE_I_AM_NOT_ON_MASTER != "y" ]]; then
    error "Current branch is not master, cowardly refusing to deploy"
    error "To force override, run this again with I_REALISE_I_AM_NOT_ON_MASTER=y"
    exit 1
  fi
  echo "OK!"

  # Check that we've not got any uncommitted files in our working directory
  echo "Checking dirty working tree..."
  DIRTY_WORKING_TREE=$(git status --porcelain 2>/dev/null | egrep "^(M| M)" || exit 0)
  if [[ $DIRTY_WORKING_TREE != "" ]]; then
    error "There are uncommitted changes in the working directory."
    error "Please commit or stash all changes and try again."
    exit 1
  fi
  echo "OK!"

  # Check if we're behind our Git remote
  echo "Checking if we're behind origin..."
  BEHIND_ORIGIN=$(git fetch origin >/dev/null 2>&1; git diff --stat HEAD...@{u})
  if [[ $BEHIND_ORIGIN != "" ]]; then
    error "You are behind the origin branch - please pull and try again."
    exit 1
  fi
  echo "OK!"
fi

cf login -a api.cloud.service.gov.uk -u "$CF_USER" -p "$CF_PASS" -o "$CF_ORG" -s "$CF_SPACE"
cf push
