---
title: Handle failure scenarios
weight: 20
---

# Handle failure scenarios

After [setting up the successful verification journey][successful-verification], you should make sure your service can handle the failure scenarios.

There are two scenarios when the user does not successfully complete the verification journey:

| Scenario                 | Description |
| ------------------------ | ----------- |
| `NO_AUTHENTICATION`      | The user chose to cancel at some point in their journey.           |
| `AUTHENTICATION_FAILURE` | The identity provider could not verify the user's identity.          |

Find out how to handle these   failure scenarios, including how to:

- recognise failure responses
- respond to users whose identity was not verified

This guide uses the GOV.UK Verify testing service as a placeholder for the GOV.UK Verify Hub. The testing service is hosted by the GOV.UK Verify team, which means you can follow the instructions on this page using your local VSP setup.

## Prerequisites

To follow instructions on this page, you should have already:

- downloaded [the latest VSP release][vsp-release]
- familiarised yourself with or implemented [the successful verification scenario][successful-verification]

This guide continues from the 'Response from the testing service' section.

## NO_AUTHENTICATION scenario

If a user cancels before the identity verification process is complete, GOV.UK Verify Hub sends a `NO_AUTHENTICATION` response. To run this scenario using the testing service:

1. Submit [an authentication request to the testing service][send-request].
2. Go to the `responseGeneratorLocation` URL in the [response from the testing service][scenario-list].
3. Select the `executeUri` for the `NO_AUTHENTICATION` scenario.

For example, the `NO_AUTHENTICATION` JSON object is similar to:

```json
{
  "executeUri" : "https://compliance-tool-reference.ida.digital.cabinet-office.gov.uk:443/rp-test/_6817b389-4924-479c-9851-db089c4e639c/test-non-matching/10",
  "id" : 12,
  "title" : "NO_AUTHENTICATION",
  "description" : "The user chose to cancel at some point in their journey."
},
```

The `responseGeneratorLocation` and `executeUri` are only valid for the VSP session that generated them. The VSP generates a new set of keys for the testing service every time you start it with the development command, which leads to the URLs changing.

If the `responseGeneratorLocation` or `executeUri` you generated don't work, try restarting your VSP. The GOV.UK Verify team periodically restarts the testing service, so restarting your VSP will restore the connection.


### Receive the SAML response from the testing service

Visiting the `executeUri` for the `NO_AUTHENTICATION` scenario causes the testing service to generate a SAML response for this scenario.

The testing service sends the SAML response inside an HTML form, via the browser. The SAML response will be base64 encoded within the `SAMLResponse` form parameter:

```
...
SAMLResponse=PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHNhbWwycDpSZXNwb25zZSBEZXN0aW5hdGlvbj0iaHR0cHM6Ly9wYXNzcG9ydC12ZXJpZnktc3R1Yi1yZWx5aW5nLXBhcnR5LWRldi5jbG91ZGFwcHMuZGlnaXRhbC92ZXJpZnkv...
...
```
### Request to translate response

From your service, make a HTTP POST request to the VSP's `/translate-response` endpoint to translate the SAML Response into JSON.

The request must contain:

| Parameter          | Description                                                      |
| ------------------ | ---------------------------------------------------------------- |
| `samlResponse`     | Base64 encoded SAML response from the testing service                  |
| `requestId`        | The string your saved when generating the authentication request |
| `levelOfAssurance` | The [level of assurance][loa] for your service                                                                 |

```http
> POST /translate-response HTTP/1.1
> Content-Type: application/json
>
{
  "samlResponse" : "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48c2FtbDJwOkF1dGhuUmVxdWVzdCB4bWxuczpzYW1sMnA9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpwcm90b2NvbCIgRGVzdGluYXRpb249Imh0dHBzOi8vY29tc...",
  "requestId" : "_64c90b35-154f-4e9f-a75b-3a58a6c55e8b",
  "levelOfAssurance" : "LEVEL_2"
}
```
Check accuracy.


### Handle response from the VSP

An `HTTP 200 OK` response confirms the VSP translated the SAML response successfully and also contains details about the test scenario:

```http
> HTTP/1.1 200 OK
> Content-Type: application/json
>
{
    "scenario": "IDENTITY_VERIFIED",
    "pid": "etikgj3ewowe",
    "levelOfAssurance": "LEVEL_2",
    "attributes": FIXME FIXME FIXME FIXME FIXME FIXME
}
```

What the service should do goes here.

## AUTHENTICATION_FAILURE

How to choose test scenario

```json
example
```

![](/images/vsp-integration-response.svg)

Check aacuracy

### Response from testing service

The testing service will generate a SAML response that will be provided in a HTML form that when submitted will be sent to the URL you provided to the VSP when connecting it to the testing service.
Your service must be listening at that URL for the incoming form submission.
The SAML response will be base64 encoded within the `SAMLResponse` form parameter:

```
SAMLResponse=PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHNhbWwycDpSZXNwb25zZSBEZXN0aW5hdGlvbj0iaHR0cHM6Ly9wYXNzcG9ydC12ZXJpZnktc3R1Yi1yZWx5aW5nLXBhcnR5LWRldi5jbG91ZGFwcHMuZGlnaXRhbC92ZXJpZnkv...
```
Check accuracy.

### Request to translate response

From your service, make a HTTP POST request to the VSP's `/translate-response` endpoint to translate the SAML Response into JSON.

The request must contain:

| Parameter          | Description                                                      |
| ------------------ | ---------------------------------------------------------------- |
| `samlResponse`     | Base64 encoded SAML response from the testing service                  |
| `requestId`        | The string your saved when generating the authentication request |
| `levelOfAssurance` | The [level of assurance][loa] for your service                                                                 |

```http
> POST /translate-response HTTP/1.1
> Content-Type: application/json
>
{
  "samlResponse" : "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48c2FtbDJwOkF1dGhuUmVxdWVzdCB4bWxuczpzYW1sMnA9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpwcm90b2NvbCIgRGVzdGluYXRpb249Imh0dHBzOi8vY29tc...",
  "requestId" : "_64c90b35-154f-4e9f-a75b-3a58a6c55e8b",
  "levelOfAssurance" : "LEVEL_2"
}
```
Check accuracy.


### Handle translated response

An `HTTP 200 OK` response confirms the VSP translated the SAML response successfully and also contains details about the test scenario:

```http
> HTTP/1.1 200 OK
> Content-Type: application/json
>
{
    "scenario": "IDENTITY_VERIFIED",
    "pid": "etikgj3ewowe",
    "levelOfAssurance": "LEVEL_2",
    "attributes": FIXME FIXME FIXME FIXME FIXME FIXME
}
```

What the service should do goes here.


## Next steps
Your service can now use the provided identity or error messages to further guide the user in their journey in your service.

[successful-verification]: LINK
