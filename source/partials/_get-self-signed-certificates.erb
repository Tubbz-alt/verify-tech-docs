Use your preferred method to generate a new private key and self-signed certificate pair, but make sure:

* the private key is PKCS#8 formatted with a `.pk8` extension
* the self-signed certificate is in X509 format and PEM encoded with a `.crt` extension

<%= partial "partials/details-tag-style" %>

<details class="govuk-details" data-module="govuk-details">
  <summary class="govuk-details__summary">
    <span class="govuk-details__summary-text">
      See an example
    </span>
  </summary>
  <div class="govuk-details__text">
  You can use [OpenSSL][openssl-github] to generate your keys and self-signed certificates. Most Linux distributions and Mac OS versions have OpenSSL installed.

  You can then generate your private key and self-signed certificate:

  ```sh
  openssl req -x509 -newkey rsa:2048 -keyout component-encryption-key-4.pk8 -out component-encryption-cert-4.crt -days 365 -nodes -sha256 -subj "/C=GB/ST=County/L=City/O=DepartmentName/OU=DigitalUnit/CN=service-production-component-encryption-4"
  ```

  The command generates:

  * a private key named `component-encryption-key-4.pk8`
  * a self-signed certificate, `component-encryption-cert-4.crt`, valid for 1 year

  The common name (`CN`) is the part of the certificate metadata that helps you identify that certificate more easily. For example, `CN` comes up in the user interface when checking if you uploaded the right certificate to the GOV.UK Verify Service Admin tool.

  When choosing the `CN` for your certificate, make sure you don't use underscores.

  There is no mandatory naming convention, but you may find it useful to include:

  * the name of your service
  * the name of the component the certificate is for
  * the environment name you generated the certificate for
  * the type of certificate, for example signing or encryption
  * a version number for your certificate
  </div>
</details>
