
<% if component == "VSP" %>
Add your new <%= component %> private encryption key to the `samlSecondaryEncryptionKey` field in the <%= component %> configuration file.

Restart the <%= component %> to implement the configuration changes. The <%= component %> can now use both the new and old keys to decrypt SAML messages.
<% end %>

<% if component == "MSA" and type == "encryption" %>

Add a second list item containing the details for your new key and self-signed certificate under `encryptionKeys` in your [MSA configuration][msa-config], for example:

```yaml
encryptionKeys:
- publicKey:
    certFile: msa_encryption_2016.crt
    name: MSA Encryption 2016
  privateKey:
    keyFile: msa_encryption_2016.pk8
- publicKey:
    certFile: msa_encryption_2017.crt
    name: MSA Encryption 2017
  privateKey:
    keyFile: msa_encryption_2017.pk8
```

| Field name | Description                                                                                       |
| ---------- | ------------------------------------------------------------------------------------------------- |
| `certFile` | The name of the `.crt` file containing your certificate                                                |
| `name`     | A meaningful name for your certificate which is published in your MSA's metadata |
| `keyFile`  |  The name of the `.pk8` file containing your private key                                                                                                |

Restart the MSA to implement the configuration changes. The MSA can now use both the new and old keys to decrypt SAML messages.

<% end %>


<% if component == "MSA" and type == "signing" %>

Add your new signing key and self-signed certificate to `signingKeys.secondary` in your MSA configuration, for example:

```yaml
signingKeys:
  primary:
    publicKey:
      certFile: msa_signing_2016.crt
      name: 2016 MSA Signing Key
    privateKey:
      keyFile: msa_signing_2016.pk8
  secondary:
    publicKey:
      certFile: msa_signing_2017.crt
      name: 2017 MSA Signing Key
    privateKey:
      keyFile: msa_signing_2017.pk8
```

| Field name | Description                                                                                       |
| ---------- | ------------------------------------------------------------------------------------------------- |
| `certFile` | The name of the `.crt` file containing your certificate                                                |
| `name`     | A meaningful name for your certificate which is published in your MSA's metadata |
| `keyFile`  |  The name of the `.pk8` file containing your private key                                                                                                |


Restart the MSA to publish the new signing certificate to its metadata. You must do this because the MSA publishes its certificates containing the public keys in its own metadata at run time. The service provider you’re using reads this metadata and uses the MSA's signing certificate to trust assertions signed by the MSA.

If you’re using the VSP, wait for it to load the MSA metadata. The VSP periodically refreshes its metadata and will log when it has finished. Once it loads the new metadata, the VSP trusts assertions signed with the new MSA signing key.

<% end %>


<% if component == "service provider" %>
Add your new service provider private encryption key to your service provider. Your service can now use both the new and old keys to decrypt SAML messages.
<% end %>
