---
title: Matching cycles
weight: 20
---

# Matching cycles

The matching process typically consists of several stages, also known as matching cycles:

1. personal identifier match
1. user attribute match
1. alternative trusted source match
1. user input match

Your service should run each cycle in turn to attempt to match the user to the correct record in the local data source. Each matching cycle uses an increasing number of attributes to search for a match.

If your service doesn't find a match after completing the matching cycles, you can decide if you want to create a new account for the user.

## Personal identifier match

This first cycle is applicable if the user has previously verified their identity with the same identity provider. When doing a personal identifier (PID) match, the user’s hashed PID is matched against an existing hashed PID in your datastore(s).

[Find out more about the PID][pid].

## User attribute match

If the PID match does not return a result, you should use the user attributes from the identity provider to check for possible matches.

The matching service you build can take the user attributes and attempt to find a match between the user and their existing record. Your service’s matching rules should specify which details to use. For example, you should use historical verified data if offered by the identity provider and then use unverified historical data to tell the difference between candidate records.

If your service finds a single match, it should create a correlation between the hashed PID and the existing record in the local datastore(s).

The hashed PID should then be written to your datastore(s) so the next time the user attempts to use the service with the same identity provider, their record will be found during the personal identifier match.

Stop the matching process if the user attribute match:

- fails to find a match and no additional attributes are available
- finds multiple matches and no additional attributes are available

If the user attribute match finds multiple matches and additional attributes are available, continue to the next stage.

## Alternative trusted source match

This stage uses additional attributes related to identity from another source such as a credit referencing agency or other government department to help the matching process. For example, an additional attribute could be whether the user qualifies for a Blue Badge.

## User input match

At this stage, your service asks the user for some additional information, for example driving licence number. Your service then uses this information to refine the match. If your service finds a match, it should save the hashed PID in your datastore(s).

This cycle is defined in the government service policy and may not be needed for all matches. You should clearly define what information your service asks the user for and how to use it for matching. For example, you decide how many pieces of additional information to request. If you request 2 pieces of information and the user can only provide 1 of them, your matching rules should specify whether to match this user.

Use this cycle to enhance cycle 1 and not as an alternative to cycle 1.

Although it might seem more productive to run Cycle 3 straight away with the greatest number of attributes, it’s often less effective. Using Cycle 3 in place of earlier cycles can result in your matching service retrieving fewer possible matching records and incorrect records if one or more of the input attributes are incorrect.

<%= partial "partials/links" %>
